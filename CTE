These queries use common table expressions instead of subqueries to answer the same questions as in "Subqueries".


Query_1: This is a SQL query that finds average amount paid by the top 5 customers:

WITH avg_pmt (customer_id, first_name, last_name, highest_pmt, city, country) AS
(SELECT b.customer_id,
        b.first_name, 
	      b.last_name, 
       	SUM(a.amount) AS highest_pmt,
      	d.city,
      	e.country
FROM payment a
INNER JOIN customer b ON a.customer_id = b.customer_id
INNER JOIN address c ON b.address_id = c.address_ID
INNER JOIN city d ON c.city_id = d.city_id
INNER JOIN country e ON d.country_id = e.country_id
WHERE d.city IN ('Aurora',
	               'Atlicxo',
	               'Xintai',
	               'Adoni',
	               'Dhule (Dhulia)',
	               'Kurashiki',
	               'Pingxiang',
	               'Sivas',
	               'Celaya',
	               'So Leopoldo'
                 )
GROUP BY b.customer_id, b.first_name, b.last_name, d.city, e.country
ORDER BY highest_pmt DESC
LIMIT 5) 

SELECT AVG(highest_pmt) AS average
FROM avg_pmt;




Query_2: This is a SQL query that finds how many of the top 5 customers are based within each country:

WITH top_5_customers (customer_id, first_name, last_name, highest_pmt, city, country) AS
(SELECT b.customer_id,
        b.first_name, 
	      b.last_name, 
       	SUM(a.amount) AS highest_pmt,
      	d.city,
      	e.country
FROM payment a
INNER JOIN customer b ON a.customer_id = b.customer_id
INNER JOIN address c ON b.address_id = c.address_ID
INNER JOIN city d ON c.city_id = d.city_id
INNER JOIN country e ON d.country_id = e.country_id
WHERE d.city IN ('Aurora',
	               'Atlicxo',
	               'Xintai',
	               'Adoni',
	               'Dhule (Dhulia)',
	               'Kurashiki',
	               'Pingxiang',
	               'Sivas',
	               'Celaya',
	               'So Leopoldo'
                 )
GROUP BY b.customer_id, b.first_name, b.last_name, d.city, e.country
ORDER BY highest_pmt DESC
LIMIT 5)

SELECT country.country, 
	     COUNT(DISTINCT customer.customer_id) AS all_customer_count,
		   COUNT(DISTINCT top_5_customers) AS top_customer_count
FROM customer
LEFT JOIN address ON customer.address_id = address.address_id
LEFT JOIN city ON address.city_id = city.city_id
LEFT JOIN country ON city.country_id = country.country_id
LEFT JOIN top_5_customers ON country.country = top_5_customers.country
GROUP BY country.country
ORDER BY COUNT(country.country) DESC
LIMIT 5;
